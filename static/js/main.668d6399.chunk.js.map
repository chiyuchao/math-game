{"version":3,"sources":["AppComponent/Popup.js","AppComponent/ButtonAppBar.js","Services/Calculator.js","Services/Rest.js","questionBase.js","AppComponent/AppBody.js","AppComponent/LevelSelect.js","App.js","reportWebVitals.js","index.js","Assets/failureSound.wav","Assets/correctSound.wav","Assets/gameClearanceSound.wav"],"names":["style","outline","position","top","left","transform","width","bgcolor","border","boxShadow","p","PopUp","_ref","showPopup","_React$useState","React","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","react","IconButton","sx","color","onClick","Help_default","a","Modal","onClose","aria-labelledby","aria-describedby","Grid","container","alignItems","justifyContent","Typography","align","id","variant","component","mt","mb","Button","ButtonAppBar","Box","flexGrow","AppBar","Toolbar","size","edge","aria-label","Menu_default","Calculator","calculatorMethod","gd","inputA","inputB","constant","indexA","indexOf","indexB","b","slice","join","length","parseInt","Rest","userSubmit","count","gdLength","data","userCount","userGdLength","console","log","questionBase","difficulty","question","submittedRecordShow","Set","submittedRecord","Appbody","useParams","levelCreated","level","find","_useState","useState","Array","fill","_useState2","ansList","setAnsList","_useState3","_useState4","setCount","_useState5","_useState6","inputIndex","setInputIndex","_useState7","_useState8","setInputA","_useState9","_useState10","setInputB","_useState11","_useState12","inputC","setInputC","_useState13","_useState14","textfieldColorA","setTextfieldColorA","_useState15","_useState16","textfieldColorB","setTextfieldColorB","_useState17","_useState18","textfieldColorC","setTextfieldColorC","_useState19","_useState20","keyIconColor","setKeyIconColor","_useState21","_useState22","hintIconColor","setHintIconColor","_useState23","_useState24","submittedRecordTableRows","setSubmittedRecordTableRows","_useState25","_useState26","newLevelDialogueOpen","setnewLevelDialogueOpen","_useState27","_useState28","levelcompletedModalOpen","setLevelcompletedModalOpen","_useState29","_useState30","stepEnable","setStepEnable","handleNewLevelDialogueClose","_useState31","_useState32","duplicateSnackbarOpen","setduplicateSnackbarOpen","_useState33","_useState34","setHidden","_useState35","_useState36","hintButtondisabled","sethintButtondisabled","_useState37","_useState38","hintDialogOpen","setHintDialogOpen","textfieldOnClick","inputInd","numberButtonOnClick","inputNumber","newValue","String","createSubmittedRecordTable","no","A","B","C","results","react_default","createElement","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","window","location","href","keepMounted","alignContent","concat","reload","ArrowForwardIos_default","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","height","className","map","value","index","item","TextField","disabled","InputProps","disableUnderline","py","ml","Key_default","toConsumableArray","currentSubmittedAnswer","has","add","Audio","CorrectSound","play","lenght","setTimeout","GameClearanceSound","correctAnswer","FailureSound","_step","_iterator","_createForOfIteratorHelper","s","n","done","split","err","e","f","autoFocus","Tooltip","title","Lightbulb_default","direction","Backspace_default","modules","activeClass","to","spy","smooth","offset","duration","ArrowDownward_default","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","key","&:last-child td, &:last-child th","scope","lib","onComplete","enabled","steps","intro","element","initialStep","onExit","options","nextLabel","prevLabel","doneLabel","LevelSelect","Box_Box","minwidth","px","borderColor","startIcon","LocalFlorist_default","App","react_router_dom","AppComponent_ButtonAppBar","react_router","exact","path","AppComponent_LevelSelect","AppBody","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App_0","module","exports"],"mappings":"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","file":"static/js/main.668d6399.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\n\r\nconst style = {\r\n  outline: 0,\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 350,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function PopUp({ showPopup }) {\r\n  const [open, setOpen] = React.useState(showPopup);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton sx={{ color: \"White\" }} onClick={handleOpen}>\r\n        <HelpIcon />\r\n      </IconButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" sx={style}>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            遊戲說明\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2, mb: 2 }}\r\n          >\r\n            每一關的破關密碼都是一串有A,B,C三個未知數的算式。\r\n            但有部分的密碼需要被解開， 嘗試輸入正確ABC組合來打開完整的密碼串吧!\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mb: 2 }}\r\n          ></Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            遊戲目標\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            每輸入一組正確的答案組合 ，可以解開一格密碼，\r\n            將所有密碼解開就過關了!\r\n          </Typography>\r\n          <Button sx={{ mt: 2 }} align=\"center\" onClick={handleClose}>\r\n            close\r\n          </Button>\r\n        </Grid>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Popup from \"./Popup\";\r\n\r\nconst ButtonAppBar = () => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"sticky\" sx={{ bgcolor: \"#509993\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Guess My Rule\r\n          </Typography>\r\n\r\n          <Popup />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default ButtonAppBar;\r\n","const Calculator = {\r\n  calculatorMethod: function(gd, inputA, inputB) {\r\n    const indexA = gd.indexOf(\"A\");\r\n    const indexB = gd.indexOf(\"B\");\r\n    let a;\r\n    let b = gd.slice(indexA + 1, indexB).join(\"\");\r\n    let constant;\r\n    if (indexA === 0) {\r\n      a = \"1\";\r\n    } else {\r\n      a = gd.slice(0, indexA).join(\"\");\r\n    }\r\n    if ((b === \"+\") | (b === \"-\")) {\r\n      b = b + \"1\";\r\n    }\r\n\r\n    if (indexB + 1 === gd.length) {\r\n      constant = \"0\";\r\n    } else {\r\n      constant = gd.slice(indexB + 1, gd.length).join(\"\");\r\n    }\r\n\r\n    const answer =\r\n      parseInt(a) * parseInt(inputA) +\r\n      parseInt(b) * parseInt(inputB) +\r\n      parseInt(constant);\r\n\r\n    return answer;\r\n  },\r\n};\r\nexport default Calculator;\r\n","const Rest = {\r\n  userSubmit: (count, gdLength) => {\r\n    var url = \"\";\r\n    var data = { userCount: count, userGdLength: gdLength };\r\n    console.log(data);\r\n\r\n    //     fetch(url, {\r\n    //       method: \"POST\", // or 'PUT'\r\n    //       body: JSON.stringify(data), // data can be `string` or {object}!\r\n    //       headers: new Headers({\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       }),\r\n    //     })\r\n    //       .then((res) => res.json())\r\n    //       .catch((error) => console.error(\"Error:\", error))\r\n    //       .then((response) => console.log(\"Success:\", response));\r\n  },\r\n};\r\nexport default Rest;\r\n","export const data = [\r\n  { id: \"1\", difficulty: \"level 1\", question: [\"A\", \"-\", 4, \"B\"] },\r\n  { id: \"2\", difficulty: \"level 2\", question: [2, \"A\", \"+\", \"B\"] },\r\n  { id: \"3\", difficulty: \"level 3\", question: [3, \"A\", \"-\", 2, \"B\"] },\r\n  { id: \"4\", difficulty: \"level 4\", question: [\"A\", \"+\", 3, \"B\", \"-\", 1] },\r\n  { id: \"5\", difficulty: \"level 5\", question: [3, \"A\", \"+\", \"B\", \"-\", 7] },\r\n  { id: \"6\", difficulty: \"level 6\", question: [2, \"A\", \"+\", 7, \"B\", \"-\", 7] },\r\n  { id: \"7\", difficulty: \"level 7\", question: [5, \"A\", \"-\", 4, \"B\", \"+\", 1] },\r\n  {\r\n    id: \"8\",\r\n    difficulty: \"level 8\",\r\n    question: [1, 0, \"A\", \"-\", 2, \"B\", \"+\", 1],\r\n  },\r\n  {\r\n    id: \"9\",\r\n    difficulty: \"level 9\",\r\n    question: [2, \"A\", \"-\", 1, 2, \"B\", \"-\", 1, 0],\r\n  },\r\n];\r\n\r\nexport default { data };\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n  Slide,\r\n  Dialog,\r\n  SpeedDial,\r\n  Modal,\r\n  Snackbar,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport BackspaceIcon from \"@mui/icons-material/Backspace\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport KeyIcon from \"@mui/icons-material/Key\";\r\nimport Calculator from \"../Services/Calculator\";\r\nimport Rest from \"../Services/Rest\";\r\nimport CorrectSound from \"../Assets/correctSound.wav\";\r\nimport FailureSound from \"../Assets/failureSound.wav\";\r\nimport GameClearanceSound from \"../Assets/gameClearanceSound.wav\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductionQuantityLimits } from \"@mui/icons-material\";\r\nimport questionBase from \"../questionBase\";\r\nimport NewLevelPopUp from \"./NewLevelPopUp\";\r\nimport { SpeedDialIcon } from \"@mui/material\";\r\nimport { ArrowForwardIcon } from \"@mui/icons-material/ArrowForward\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Popup from \"./Popup\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport introJs from \"intro.js\";\r\nimport \"intro.js/introjs.css\";\r\nimport { Steps, Hints } from \"intro.js-react\";\r\nimport LightbulbIcon from \"@mui/icons-material/Lightbulb\";\r\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\n\r\nconst submittedRecordShow = new Set();\r\nconst submittedRecord = new Set();\r\nconst Appbody = () => {\r\n  const { id } = useParams();\r\n  const levelCreated = questionBase.data.length;\r\n  const level = questionBase.data.find((level) => level.id === id);\r\n  const { difficulty, question } = level;\r\n  const gd = question;\r\n\r\n  const [ansList, setAnsList] = useState(Array(gd.length).fill(\" \"));\r\n  const [count, setCount] = useState(0);\r\n  const [inputIndex, setInputIndex] = useState(\"\");\r\n  const [inputA, setInputA] = useState(\"\");\r\n  const [inputB, setInputB] = useState(\"\");\r\n  const [inputC, setInputC] = useState(\"\");\r\n  const [textfieldColorA, setTextfieldColorA] = useState(\"\");\r\n  const [textfieldColorB, setTextfieldColorB] = useState(\"\");\r\n  const [textfieldColorC, setTextfieldColorC] = useState(\"\");\r\n  const [keyIconColor, setKeyIconColor] = useState(\"Gray\");\r\n  const [hintIconColor, setHintIconColor] = useState(\"\");\r\n  const [submittedRecordTableRows, setSubmittedRecordTableRows] = useState([]);\r\n  const [newLevelDialogueOpen, setnewLevelDialogueOpen] = useState(false);\r\n  const [levelcompletedModalOpen, setLevelcompletedModalOpen] = useState(false);\r\n  const [stepEnable, setStepEnable] = useState(true);\r\n  const handleClickOpen = () => {\r\n    setnewLevelDialogueOpen(true);\r\n  };\r\n  const handleNewLevelDialogueClose = () => {\r\n    setnewLevelDialogueOpen(false);\r\n  };\r\n  const [duplicateSnackbarOpen, setduplicateSnackbarOpen] = useState(false);\r\n  const handleDuplicateSnackbarOpen = () => {\r\n    setduplicateSnackbarOpen(true);\r\n  };\r\n\r\n  const handleduplicateSnackbarClose = () => {\r\n    setduplicateSnackbarOpen(false);\r\n  };\r\n  const [hidden, setHidden] = useState(true);\r\n  const [hintButtondisabled, sethintButtondisabled] = useState(false);\r\n  const [hintDialogOpen, setHintDialogOpen] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Guess My Rule\",\r\n      intro: \"Hello👋</br>這是一個需要你幫忙<b>破解密碼</b>的益智遊戲。\",\r\n    },\r\n    {\r\n      title: \"遊戲目標\",\r\n      intro: \"每一關的破關密碼都是一串有A,B,C三個未知數的方程式💁‍♀️\",\r\n    },\r\n\r\n    {\r\n      title: \"遊戲目標\",\r\n      intro:\r\n        \"每輸入一組可以帶入這個方程式中成立的組合，就可以解開一格密碼，</br>將所有密碼格解開就可以進入下一關⏩\",\r\n    },\r\n    {\r\n      title: \"遊戲目標\",\r\n      intro:\r\n        \"你可能可以從已經輸入過的答案中找出一些規律，去推測破關密碼的方程式👁‍🗨</br>挑戰用<b>最少組的正確解答</b>過關吧🎉\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#password\",\r\n      intro: \"這邊是我們要解的密碼，C在等號的左邊，A和B則隱藏在等號的右邊\",\r\n    },\r\n\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#answerArea\",\r\n      intro: \"這邊可以輸入你想試試看的ABC組合，按提交就可以送出答案\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#key\",\r\n      intro: \"如果輸入的答案帶入方程式成立，鑰匙會亮起來，並打開一格密碼。\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#submittedRecord\",\r\n      intro: \"按鈕可以下滑頁面看到你之前提交過的答案組合📜\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#hintButton\",\r\n      intro: \"如果需要一點提示，可以點選這邊，但每關只能使用一次喔!\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      intro:\r\n        \"還是不清楚怎麼破解密碼?有示範影片🎬</br>或是結束導覽，開始遊戲吧~\",\r\n    },\r\n  ];\r\n  // const onExit = () => {\r\n  //   console.log(\"onExit\");\r\n  //   setStepEnable(false);\r\n  // };\r\n  // const Transition = React.forwardRef(function Transition(\r\n  //   props: TransitionProps & {\r\n  //     children: React.ReactElement<any, any>,\r\n  //   },\r\n  //   ref: React.Ref<unknown>\r\n  // ) {\r\n  //   return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  // });\r\n\r\n  const textfieldOnClick = (inputInd) => {\r\n    if (inputInd === inputIndex) {\r\n      setInputIndex(\"\");\r\n    }\r\n    setInputIndex(inputInd);\r\n    switch (inputInd) {\r\n      case \"A\":\r\n        setTextfieldColorA(\"#BEBEBE\");\r\n        setTextfieldColorB(\"\");\r\n        setTextfieldColorC(\"\");\r\n        break;\r\n      case \"B\":\r\n        setTextfieldColorA(\"\");\r\n        setTextfieldColorB(\"#BEBEBE\");\r\n        setTextfieldColorC(\"\");\r\n        break;\r\n      case \"C\":\r\n        setTextfieldColorA(\"\");\r\n        setTextfieldColorB(\"\");\r\n        setTextfieldColorC(\"#BEBEBE\");\r\n        break;\r\n    }\r\n  };\r\n  console.log(\"here\");\r\n  const numberButtonOnClick = (inputNumber) => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputA(newValue);\r\n      } else {\r\n        const newValue = String(inputA) + String(inputNumber);\r\n        setInputA(parseInt(newValue, 10));\r\n      }\r\n    }\r\n    if (inputIndex === \"B\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputB(parseInt(newValue, 10));\r\n      } else {\r\n        const newValue = String(inputB) + String(inputNumber);\r\n        setInputB(parseInt(newValue, 10));\r\n      }\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputC(parseInt(newValue, 10));\r\n      } else {\r\n        const newValue = String(inputC) + String(inputNumber);\r\n        setInputC(parseInt(newValue, 10));\r\n      }\r\n    }\r\n  };\r\n\r\n  const backspaceButtonOnClick = () => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      setInputA(parseInt(inputA / 10) ? parseInt(inputA / 10) : \"\");\r\n    }\r\n    if (inputIndex === \"B\") {\r\n      setInputB(parseInt(inputB / 10) ? parseInt(inputB / 10) : \"\");\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      setInputC(parseInt(inputC / 10) ? parseInt(inputC / 10) : \"\");\r\n    }\r\n  };\r\n  const minusButtonOnclick = () => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      if (inputA === \"\") {\r\n        setInputA(\"-\");\r\n      }\r\n    }\r\n\r\n    if (inputIndex === \"B\") {\r\n      if (inputB === \"\") {\r\n        setInputB(\"-\");\r\n      }\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      if (inputC === \"\") {\r\n        setInputC(\"-\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitButtonOnclick = () => {\r\n    if (inputA.length === 0 || inputB.length === 0 || inputC.length === 0) {\r\n      return;\r\n    }\r\n    let data = [...ansList];\r\n    let currentSubmittedAnswer =\r\n      String(inputA) + \",\" + String(inputB) + \",\" + String(inputC);\r\n\r\n    if (submittedRecord.has(currentSubmittedAnswer)) {\r\n      setduplicateSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (Calculator.calculatorMethod(gd, inputA, inputB) === parseInt(inputC)) {\r\n      submittedRecord.add(currentSubmittedAnswer);\r\n      submittedRecordShow.add(currentSubmittedAnswer + \",正確\");\r\n      data[count] = gd[count];\r\n      setCount(count + 1);\r\n      setAnsList(data);\r\n      setKeyIconColor(\"Gold\");\r\n      new Audio(CorrectSound).play();\r\n      console.log(count);\r\n      Rest.userSubmit(count, gd.lenght);\r\n      console.log(gd.length);\r\n\r\n      if (count + 1 === gd.length) {\r\n        setTimeout(() => {}, 1000);\r\n        new Audio(GameClearanceSound).play();\r\n        setHidden(false);\r\n        setLevelcompletedModalOpen(true);\r\n        return;\r\n      }\r\n    } else {\r\n      let correctAnswer = Calculator.calculatorMethod(gd, inputA, inputB);\r\n      submittedRecord.add(inputA + \",\" + inputB + \",\" + correctAnswer);\r\n      submittedRecord.add(currentSubmittedAnswer);\r\n      console.log(submittedRecord);\r\n      submittedRecordShow.add(\r\n        currentSubmittedAnswer + \",錯誤 \" + \" C = \" + correctAnswer\r\n      );\r\n      setKeyIconColor(\"Gray\");\r\n      new Audio(FailureSound).play();\r\n    }\r\n    //console.log(submittedRecordShow);\r\n    setInputA(\"\");\r\n    setInputB(\"\");\r\n    setInputC(\"\");\r\n    let no = 1;\r\n    for (let item of submittedRecordShow) {\r\n      item = item.split(\",\");\r\n      setSubmittedRecordTableRows(\r\n        submittedRecordTableRows.concat([\r\n          createSubmittedRecordTable(no, item[0], item[1], item[2], item[3]),\r\n        ])\r\n      );\r\n      no += 1;\r\n    }\r\n  };\r\n  const hintButtonOnclick = () => {\r\n    let data = [...ansList];\r\n    data[count] = gd[count];\r\n    setCount(count + 1);\r\n    setAnsList(data);\r\n    sethintButtondisabled(true);\r\n    new Audio(CorrectSound).play();\r\n    if (count + 1 === gd.length) {\r\n      setTimeout(() => {}, 1000);\r\n      new Audio(GameClearanceSound).play();\r\n      setLevelcompletedModalOpen(true);\r\n      return;\r\n    }\r\n    setHintDialogOpen(false);\r\n    setHintIconColor(\"yellow\");\r\n    console.log(\"使用提示\");\r\n  };\r\n\r\n  const createSubmittedRecordTable = (no, A, B, C, results) => {\r\n    return { no, A, B, C, results };\r\n  };\r\n\r\n  const NextLevelButton = () => {\r\n    if (id === String(levelCreated)) {\r\n      setnewLevelDialogueOpen(true);\r\n      return;\r\n    } else {\r\n      window.location.href = `#/level-select/${parseInt(id) + 1}`;\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={newLevelDialogueOpen}\r\n        //TransitionComponent={Transition}\r\n\r\n        onClose={handleNewLevelDialogueClose}\r\n      >\r\n        <DialogTitle>{\"未完待續...\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            新的關卡正在開發中!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleNewLevelDialogueClose}></Button>\r\n          <Button\r\n            onClick={() => {\r\n              window.location.href = \"/level-select/\";\r\n            }}\r\n          >\r\n            回首頁\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={levelcompletedModalOpen}\r\n        keepMounted\r\n        onClose={() => {\r\n          setLevelcompletedModalOpen(false);\r\n        }}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle align=\"center\">{\"🎉恭喜過關🎉\"}</DialogTitle>\r\n        <DialogContent align=\"center\">\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            總共嘗試了 <b>{submittedRecordTableRows.length + 1}</b> 次<br></br>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            {/* <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            <AutorenewIcon />\r\n          </Button>\r\n            <Button\r\n              \r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                window.location.href = \"/level-select/\";\r\n              }}\r\n            >\r\n              回首頁\r\n            </Button> */}\r\n            <Button\r\n              sx={{ alignContent: \"center\", width: \"150px\" }}\r\n              variant=\"outlined\"\r\n              onClick={NextLevelButton}\r\n            >\r\n              下一關\r\n              <ArrowForwardIosIcon />\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={duplicateSnackbarOpen}\r\n        onClose={handleduplicateSnackbarClose}\r\n        message=\"這組答案已經輸入過了!\"\r\n        autoHideDuration=\"2000\"\r\n      />\r\n\r\n      <section style={{ height: \"90vh\" }} id=\"step1\">\r\n        <h1 style={{ color: \"rgba(52, 52, 52, 0.5)\", height: \"5px\" }}>\r\n          Level {id}\r\n        </h1>\r\n\r\n        <Grid\r\n          id=\"password\"\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"15vh\" }}\r\n        >\r\n          <Typography\r\n            id=\"cElement\"\r\n            className=\"hexagon\"\r\n            variant=\"h5\"\r\n            color=\"#523D42\"\r\n          >\r\n            C\r\n          </Typography>\r\n          <Typography className=\"hexagon\" variant=\"h5\" color=\"#523D42\">\r\n            =\r\n          </Typography>\r\n\r\n          {ansList.map((value, index) => {\r\n            return (\r\n              <Typography\r\n                className={index === count - 1 ? \"instantFeedback\" : \"hexagon\"}\r\n                variant=\"h5\"\r\n              >\r\n                {value}\r\n              </Typography>\r\n            );\r\n          })}\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"20vh\" }}\r\n        >\r\n          <Grid id=\"answerArea\">\r\n            <Grid container item alignItems=\"center\" justifyContent=\"center\">\r\n              <Typography\r\n                bgcolor={textfieldColorA}\r\n                className=\"hexagonIpuntLeft1\"\r\n              >\r\n                A\r\n              </Typography>\r\n              <TextField\r\n                sx={{ bgcolor: textfieldColorA }}\r\n                disabled\r\n                className=\"hexagonIpuntRight1\"\r\n                variant=\"standard\"\r\n                value={inputA}\r\n                InputProps={{ disableUnderline: true }}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"A\");\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ py: 1.5 }}\r\n            >\r\n              <Typography\r\n                bgcolor={textfieldColorB}\r\n                className=\"hexagonIpuntLeft2\"\r\n              >\r\n                B\r\n              </Typography>\r\n              <TextField\r\n                sx={{ bgcolor: textfieldColorB }}\r\n                disabled\r\n                className=\"hexagonIpuntRight2\"\r\n                variant=\"standard\"\r\n                value={inputB}\r\n                InputProps={{ disableUnderline: true }}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"B\");\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ ml: 1.5 }}\r\n            >\r\n              <Typography\r\n                className=\"hexagonIpuntLeft3\"\r\n                bgcolor={textfieldColorC}\r\n              >\r\n                C\r\n              </Typography>\r\n              <TextField\r\n                disabled\r\n                variant=\"standard\"\r\n                className=\"hexagonIpuntRight3\"\r\n                value={inputC}\r\n                InputProps={{ disableUnderline: true }}\r\n                sx={{ bgcolor: textfieldColorC }}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"C\");\r\n                }}\r\n              />\r\n\r\n              <KeyIcon\r\n                id=\"key\"\r\n                alignItems=\"flex-end\"\r\n                sx={{ color: keyIconColor }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"70px\" }}\r\n        >\r\n          <Button\r\n            className=\"submitBtn\"\r\n            sx={{ color: \"#523D42\", ml: 5.5 }}\r\n            onClick={submitButtonOnclick}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Dialog\r\n            open={hintDialogOpen}\r\n            onClose={() => {\r\n              setHintDialogOpen(false);\r\n            }}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"使用提示\"}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                要使用提示打開一格密碼嗎 ? 一關只能使用一次喔!\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  setHintDialogOpen(false);\r\n                }}\r\n              >\r\n                再想想\r\n              </Button>\r\n              <Button onClick={hintButtonOnclick} autoFocus>\r\n                好\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <IconButton\r\n            id=\"hintButton\"\r\n            disabled={hintButtondisabled}\r\n            size=\"large\"\r\n          >\r\n            <Tooltip title=\"使用提示\">\r\n              <LightbulbIcon\r\n                sx={{\r\n                  color: hintIconColor,\r\n                  mb: 1,\r\n                }}\r\n                onClick={() => {\r\n                  setHintDialogOpen(true);\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"200px\" }}\r\n        >\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(1);\r\n              }}\r\n            >\r\n              1\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(2);\r\n              }}\r\n            >\r\n              2\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(3);\r\n              }}\r\n            >\r\n              3\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(4);\r\n              }}\r\n            >\r\n              4\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(5);\r\n              }}\r\n            >\r\n              5\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(6);\r\n              }}\r\n            >\r\n              6\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(7);\r\n              }}\r\n            >\r\n              7\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(8);\r\n              }}\r\n            >\r\n              8\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(9);\r\n              }}\r\n            >\r\n              9\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={backspaceButtonOnClick}\r\n            >\r\n              <BackspaceIcon />\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(0);\r\n              }}\r\n            >\r\n              0\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={minusButtonOnclick}\r\n            >\r\n              (-)\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"50px\" }}\r\n          mt={1}\r\n        >\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"submittedRecord\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n          >\r\n            <Button sx={{ color: \"white\" }} className=\"recordBtn\">\r\n              <ArrowDownwardIcon />\r\n              Record\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </section>\r\n      <br />\r\n      <section id=\"submittedRecord\">\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={{ mt: 4.5, mb: 4 }}\r\n        >\r\n          <TableContainer style={{ width: \"350px\" }} component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: \"30px\" }} align=\"center\">\r\n                    No.\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">A</TableCell>\r\n                  <TableCell align=\"center\">B</TableCell>\r\n                  <TableCell align=\"center\">C</TableCell>\r\n                  <TableCell align=\"center\">Results</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {submittedRecordTableRows.map((row) => (\r\n                  <TableRow\r\n                    key={row.no}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.no}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.A}</TableCell>\r\n                    <TableCell align=\"center\">{row.B}</TableCell>\r\n                    <TableCell align=\"center\">{row.C}</TableCell>\r\n                    <TableCell align=\"center\">{row.results}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </section>\r\n      <Steps\r\n        onComplete={() => {\r\n          setStepEnable(false);\r\n        }}\r\n        enabled={stepEnable && id === \"1\"}\r\n        steps={steps}\r\n        initialStep={0}\r\n        onExit={() => {\r\n          setStepEnable(false);\r\n        }}\r\n        // onStart={() => {\r\n        //   setStepEnable(false);\r\n        // }}\r\n        options={{\r\n          nextLabel: \"下一步\",\r\n          prevLabel: \"上一步\",\r\n          doneLabel: \"完成\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport questionBase from \"../questionBase\";\r\nimport LocalFloristIcon from \"@mui/icons-material/LocalFlorist\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nfunction LevelSelect() {\r\n  console.log(questionBase);\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <Grid\r\n          style={{ minwidth: \"80%\" }}\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          sx={{ py: 4, px: 2 }}\r\n        >\r\n          {questionBase.data.map((question) => {\r\n            return (\r\n              <grid\r\n                alignItems=\"center\"\r\n                item\r\n                style={{ height: \"50px\", width: \"110px\" }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  sx={{ borderColor: \"#509993\", color: \"#57555E\" }}\r\n                  href={`#/level-select/${question.id}`}\r\n                  variant=\"outlined\"\r\n                  startIcon={<LocalFloristIcon sx={{ color: \"#FF7070\" }} />}\r\n                  key={question.id}\r\n                >\r\n                  {question.difficulty}\r\n                </Button>\r\n              </grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LevelSelect;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ButtonAppBar from \"./AppComponent/ButtonAppBar\";\nimport Appbody from \"./AppComponent/AppBody\";\nimport LevelSelect from \"./AppComponent/LevelSelect\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nconst App = () => {\n  console.log(\"app\");\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <ButtonAppBar />\n        <Routes>\n          <Route exact path=\"/\" element={<LevelSelect />}></Route>\n          <Route path=\"/level-select/:id\" element={<Appbody />}></Route>\n          {/* <Route path=\"/NewLevelPage\" element={<NewLevelPage />}></Route>\n          <Route path=\"*\" element={<ErrorPage />}></Route> */}\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <App />\n  // <React.StrictMode enable={false}>\n  //   <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/failureSound.1472b5cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/correctSound.38029e5a.wav\";","module.exports = __webpack_public_path__ + \"static/media/gameClearanceSound.58db2c55.wav\";"],"sourceRoot":""}