{"version":3,"sources":["AppComponent/Popup.js","AppComponent/ButtonAppBar.js","Services/Calculator.js","questionBase.js","AppComponent/AppBody.js","AppComponent/LevelSelect.js","AppComponent/ErrorPage.js","App.js","reportWebVitals.js","index.js","Assets/correctSound.wav","Assets/gameClearanceSound.wav","Assets/failureSound.wav"],"names":["style","outline","position","top","left","transform","width","bgcolor","border","boxShadow","p","PopUp","_ref","showPopup","_React$useState","React","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","react","IconButton","sx","color","onClick","Help_default","a","Modal","onClose","aria-labelledby","aria-describedby","Grid","container","alignItems","justifyContent","Typography","align","id","variant","component","mt","mb","Button","ButtonAppBar","Box","flexGrow","AppBar","Toolbar","size","edge","aria-label","Menu_default","Calculator","calculatorMethod","gd","inputA","inputB","constant","indexA","indexOf","indexB","b","slice","join","length","parseInt","questionBase","data","difficulty","question","submittedRecordShow","Set","submittedRecord","Appbody","useParams","levelCreated","level","find","_useState","useState","Array","fill","_useState2","ansList","setAnsList","_useState3","_useState4","count","setCount","_useState5","_useState6","inputIndex","setInputIndex","_useState7","_useState8","setInputA","_useState9","_useState10","setInputB","_useState11","_useState12","inputC","setInputC","_useState13","_useState14","textfieldColorA","setTextfieldColorA","_useState15","_useState16","textfieldColorB","setTextfieldColorB","_useState17","_useState18","textfieldColorC","setTextfieldColorC","_useState19","_useState20","keyIconColor","setKeyIconColor","_useState21","_useState22","submittedRecordTableRows","setSubmittedRecordTableRows","_useState23","_useState24","newLevelDialogueOpen","setnewLevelDialogueOpen","_useState25","_useState26","levelcompletedModalOpen","setLevelcompletedModalOpen","_useState27","_useState28","stepEnable","setStepEnable","handleNewLevelDialogueClose","_useState29","_useState30","duplicateSnackbarOpen","setduplicateSnackbarOpen","_useState31","_useState32","setHidden","_useState33","_useState34","hintButtondisabled","sethintButtondisabled","textfieldOnClick","inputInd","console","log","numberButtonOnClick","inputNumber","newValue","String","createSubmittedRecordTable","no","A","B","C","results","react_default","createElement","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","window","location","href","keepMounted","reload","Autorenew_default","concat","ArrowForwardIos_default","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","height","className","map","value","item","TextField","disabled","InputProps","disableUnderline","py","ml","Key_default","toConsumableArray","currentSubmittedAnswer","has","add","Audio","CorrectSound","play","setTimeout","GameClearanceSound","correctAnswer","FailureSound","_step","_iterator","_createForOfIteratorHelper","s","n","done","split","err","e","f","Lightbulb_default","&:hover","direction","Backspace_default","modules","activeClass","to","spy","smooth","offset","duration","ArrowDownward_default","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","key","&:last-child td, &:last-child th","scope","lib","onComplete","enabled","steps","title","intro","element","initialStep","onExit","options","nextLabel","prevLabel","doneLabel","LevelSelect","Box_Box","minwidth","px","borderColor","startIcon","LocalFlorist_default","ErrorPage","App","react_router_dom","AppComponent_ButtonAppBar","react_router","exact","path","AppComponent_LevelSelect","AppBody","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","enable","src_App_0","module","exports"],"mappings":"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","file":"static/js/main.13b14533.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\n\r\nconst style = {\r\n  outline: 0,\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 350,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function PopUp({ showPopup }) {\r\n  const [open, setOpen] = React.useState(showPopup);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton sx={{ color: \"White\" }} onClick={handleOpen}>\r\n        <HelpIcon />\r\n      </IconButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" sx={style}>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            遊戲說明\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2, mb: 2 }}\r\n          >\r\n            每一關的破關密碼都是一串有A,B,C三個未知數的算式。\r\n            但有部分的密碼需要被解開， 嘗試輸入正確ABC組合來打開完整的密碼串吧!\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mb: 2 }}\r\n          ></Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            遊戲目標\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            每輸入一組正確的答案組合 ，可以解開一格密碼，\r\n            將所有密碼解開就過關了!\r\n          </Typography>\r\n          <Button sx={{ mt: 2 }} align=\"center\" onClick={handleClose}>\r\n            close\r\n          </Button>\r\n        </Grid>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Popup from \"./Popup\";\r\n\r\nconst ButtonAppBar = () => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"sticky\" sx={{ bgcolor: \"#509993\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Guess My Rule\r\n          </Typography>\r\n\r\n          <Popup />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default ButtonAppBar;\r\n","const Calculator = {\r\n  calculatorMethod: function(gd, inputA, inputB) {\r\n    const indexA = gd.indexOf(\"A\");\r\n    const indexB = gd.indexOf(\"B\");\r\n    let a;\r\n    let b = gd.slice(indexA + 1, indexB).join(\"\");\r\n    let constant;\r\n    if (indexA === 0) {\r\n      a = \"1\";\r\n    } else {\r\n      a = gd.slice(0, indexA).join(\"\");\r\n    }\r\n    if ((b === \"+\") | (b === \"-\")) {\r\n      b = b + \"1\";\r\n    }\r\n\r\n    if (indexB + 1 === gd.length) {\r\n      constant = \"0\";\r\n    } else {\r\n      constant = gd.slice(indexB + 1, gd.length).join(\"\");\r\n    }\r\n\r\n    const answer =\r\n      parseInt(a) * parseInt(inputA) +\r\n      parseInt(b) * parseInt(inputB) +\r\n      parseInt(constant);\r\n\r\n    return answer;\r\n  },\r\n};\r\nexport default Calculator;\r\n","export const data = [\r\n  { id: \"1\", difficulty: \"level 1\", question: [\"A\", \"-\", 4, \"B\"] },\r\n  { id: \"2\", difficulty: \"level 2\", question: [2, \"A\", \"+\", \"B\"] },\r\n  { id: \"3\", difficulty: \"level 3\", question: [3, \"A\", \"-\", 2, \"B\"] },\r\n  { id: \"4\", difficulty: \"level 4\", question: [\"A\", \"+\", 3, \"B\", \"-\", 1] },\r\n  { id: \"5\", difficulty: \"level 5\", question: [3, \"A\", \"+\", 2, \"B\", \"-\", 7] },\r\n];\r\n\r\nexport default { data };\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n  Slide,\r\n  Dialog,\r\n  SpeedDial,\r\n  Modal,\r\n  Snackbar,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport BackspaceIcon from \"@mui/icons-material/Backspace\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport KeyIcon from \"@mui/icons-material/Key\";\r\nimport Calculator from \"../Services/Calculator\";\r\nimport CorrectSound from \"../Assets/correctSound.wav\";\r\nimport FailureSound from \"../Assets/failureSound.wav\";\r\nimport GameClearanceSound from \"../Assets/gameClearanceSound.wav\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductionQuantityLimits } from \"@mui/icons-material\";\r\nimport questionBase from \"../questionBase\";\r\nimport NewLevelPopUp from \"./NewLevelPopUp\";\r\nimport { SpeedDialIcon } from \"@mui/material\";\r\nimport { ArrowForwardIcon } from \"@mui/icons-material/ArrowForward\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Popup from \"./Popup\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport introJs from \"intro.js\";\r\nimport \"intro.js/introjs.css\";\r\nimport { Steps, Hints } from \"intro.js-react\";\r\nimport LightbulbIcon from \"@mui/icons-material/Lightbulb\";\r\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\n\r\nconst submittedRecordShow = new Set();\r\nconst submittedRecord = new Set();\r\nconst Appbody = () => {\r\n  const { id } = useParams();\r\n  const levelCreated = questionBase.data.length;\r\n  const level = questionBase.data.find((level) => level.id === id);\r\n  const { difficulty, question } = level;\r\n  const gd = question;\r\n\r\n  const [ansList, setAnsList] = useState(Array(gd.length).fill(\" \"));\r\n  const [count, setCount] = useState(0);\r\n  const [inputIndex, setInputIndex] = useState(\"\");\r\n  const [inputA, setInputA] = useState(\"\");\r\n  const [inputB, setInputB] = useState(\"\");\r\n  const [inputC, setInputC] = useState(\"\");\r\n  const [textfieldColorA, setTextfieldColorA] = useState(\"\");\r\n  const [textfieldColorB, setTextfieldColorB] = useState(\"\");\r\n  const [textfieldColorC, setTextfieldColorC] = useState(\"\");\r\n  const [keyIconColor, setKeyIconColor] = useState(\"Gray\");\r\n  const [submittedRecordTableRows, setSubmittedRecordTableRows] = useState([]);\r\n  const [newLevelDialogueOpen, setnewLevelDialogueOpen] = useState(false);\r\n  const [levelcompletedModalOpen, setLevelcompletedModalOpen] = useState(false);\r\n  const [stepEnable, setStepEnable] = useState(\"true\");\r\n  const handleClickOpen = () => {\r\n    setnewLevelDialogueOpen(true);\r\n  };\r\n  const handleNewLevelDialogueClose = () => {\r\n    setnewLevelDialogueOpen(false);\r\n  };\r\n  const [duplicateSnackbarOpen, setduplicateSnackbarOpen] = useState(false);\r\n  const handleDuplicateSnackbarOpen = () => {\r\n    setduplicateSnackbarOpen(true);\r\n  };\r\n\r\n  const handleduplicateSnackbarClose = () => {\r\n    setduplicateSnackbarOpen(false);\r\n  };\r\n  const [hidden, setHidden] = useState(true);\r\n  const [hintButtondisabled, sethintButtondisabled] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Guess My Rule\",\r\n      intro: \"Hello👋</br>這是一個需要你幫忙<b>破解密碼</b>的益智遊戲。\",\r\n    },\r\n    {\r\n      title: \"遊戲目標\",\r\n      intro: \"每一關的破關密碼都是一串有A,B,C三個未知數的方程式💁‍♀️\",\r\n    },\r\n\r\n    {\r\n      title: \"遊戲目標\",\r\n      intro:\r\n        \"每輸入一組可以帶入這個方程式中成立的組合，就可以解開一格密碼，</br>將所有密碼格解開就可以進入下一關⏩\",\r\n    },\r\n    {\r\n      title: \"遊戲目標\",\r\n      intro:\r\n        \"你可能可以從已經輸入過的答案中找出一些規律，去推測破關密碼的方程式👁‍🗨</br>挑戰用<b>最少組的正確解答</b>過關吧🎉\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#password\",\r\n      intro: \"這邊是我們要解的密碼，C在等號的左邊，A和B則隱藏在等號的右邊\",\r\n    },\r\n\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#answerArea\",\r\n      intro: \"這邊可以輸入你想試試看的ABC組合，按提交就可以送出答案\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#key\",\r\n      intro: \"如果輸入的答案帶入方程式成立，鑰匙會亮起來，並打開一格密碼。\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#submittedRecord\",\r\n      intro: \"按鈕可以下滑頁面看到你之前提交過的答案組合📜\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      element: \"#hintButton\",\r\n      intro: \"如果需要一點提示，可以點選這邊，但每關只能使用一次喔!\",\r\n    },\r\n    {\r\n      title: \"遊戲導覽\",\r\n      intro:\r\n        \"還是不清楚怎麼破解密碼?有示範影片🎬</br>或是結束導覽，開始遊戲吧~\",\r\n    },\r\n  ];\r\n  // const onExit = () => {\r\n  //   console.log(\"onExit\");\r\n  //   setStepEnable(false);\r\n  // };\r\n  // const Transition = React.forwardRef(function Transition(\r\n  //   props: TransitionProps & {\r\n  //     children: React.ReactElement<any, any>,\r\n  //   },\r\n  //   ref: React.Ref<unknown>\r\n  // ) {\r\n  //   return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  // });\r\n\r\n  const textfieldOnClick = (inputInd) => {\r\n    if (inputInd === inputIndex) {\r\n      setInputIndex(\"\");\r\n    }\r\n    setInputIndex(inputInd);\r\n    switch (inputInd) {\r\n      case \"A\":\r\n        setTextfieldColorA(\"#BEBEBE\");\r\n        setTextfieldColorB(\"\");\r\n        setTextfieldColorC(\"\");\r\n        break;\r\n      case \"B\":\r\n        setTextfieldColorA(\"\");\r\n        setTextfieldColorB(\"#BEBEBE\");\r\n        setTextfieldColorC(\"\");\r\n        break;\r\n      case \"C\":\r\n        setTextfieldColorA(\"\");\r\n        setTextfieldColorB(\"\");\r\n        setTextfieldColorC(\"#BEBEBE\");\r\n        break;\r\n    }\r\n  };\r\n  console.log(\"here\");\r\n  const numberButtonOnClick = (inputNumber) => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputA(newValue);\r\n      } else {\r\n        const newValue = String(inputA) + String(inputNumber);\r\n        setInputA(parseInt(newValue, 10));\r\n      }\r\n    }\r\n    if (inputIndex === \"B\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputB(parseInt(newValue, 10));\r\n      } else {\r\n        const newValue = String(inputB) + String(inputNumber);\r\n        setInputB(parseInt(newValue, 10));\r\n      }\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputC(parseInt(newValue, 10));\r\n      } else {\r\n        const newValue = String(inputC) + String(inputNumber);\r\n        setInputC(parseInt(newValue, 10));\r\n      }\r\n    }\r\n  };\r\n\r\n  const backspaceButtonOnClick = () => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      setInputA(parseInt(inputA / 10) ? parseInt(inputA / 10) : \"\");\r\n    }\r\n    if (inputIndex === \"B\") {\r\n      setInputB(parseInt(inputB / 10) ? parseInt(inputB / 10) : \"\");\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      setInputC(parseInt(inputC / 10) ? parseInt(inputC / 10) : \"\");\r\n    }\r\n  };\r\n  const minusButtonOnclick = () => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      if (inputA === \"\") {\r\n        setInputA(\"-\");\r\n      }\r\n    }\r\n\r\n    if (inputIndex === \"B\") {\r\n      if (inputB === \"\") {\r\n        setInputB(\"-\");\r\n      }\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      if (inputC === \"\") {\r\n        setInputC(\"-\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitButtonOnclick = () => {\r\n    if (inputA.length === 0 || inputB.length === 0 || inputC.length === 0) {\r\n      return;\r\n    }\r\n    let data = [...ansList];\r\n    let currentSubmittedAnswer =\r\n      String(inputA) + \",\" + String(inputB) + \",\" + String(inputC);\r\n\r\n    if (submittedRecord.has(currentSubmittedAnswer)) {\r\n      setduplicateSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (Calculator.calculatorMethod(gd, inputA, inputB) === parseInt(inputC)) {\r\n      submittedRecord.add(currentSubmittedAnswer);\r\n      submittedRecordShow.add(currentSubmittedAnswer + \",正確\");\r\n      data[count] = gd[count];\r\n      setCount(count + 1);\r\n      setAnsList(data);\r\n      setKeyIconColor(\"Gold\");\r\n      new Audio(CorrectSound).play();\r\n      console.log(count);\r\n      console.log(gd.length);\r\n\r\n      if (count + 1 === gd.length) {\r\n        setTimeout(() => {}, 1000);\r\n        new Audio(GameClearanceSound).play();\r\n        setHidden(false);\r\n        setLevelcompletedModalOpen(true);\r\n        return;\r\n      }\r\n    } else {\r\n      let correctAnswer = Calculator.calculatorMethod(gd, inputA, inputB);\r\n      submittedRecord.add(inputA + \",\" + inputB + \",\" + correctAnswer);\r\n      submittedRecord.add(currentSubmittedAnswer);\r\n      console.log(submittedRecord);\r\n      submittedRecordShow.add(\r\n        currentSubmittedAnswer + \",錯誤 \" + \" C = \" + correctAnswer\r\n      );\r\n      setKeyIconColor(\"Gray\");\r\n      new Audio(FailureSound).play();\r\n    }\r\n    //console.log(submittedRecordShow);\r\n    setInputA(\"\");\r\n    setInputB(\"\");\r\n    setInputC(\"\");\r\n    let no = 1;\r\n    for (let item of submittedRecordShow) {\r\n      item = item.split(\",\");\r\n      setSubmittedRecordTableRows(\r\n        submittedRecordTableRows.concat([\r\n          createSubmittedRecordTable(no, item[0], item[1], item[2], item[3]),\r\n        ])\r\n      );\r\n      no += 1;\r\n    }\r\n  };\r\n  const hintButtonOnclick = () => {\r\n    let data = [...ansList];\r\n    data[count] = gd[count];\r\n    setCount(count + 1);\r\n    setAnsList(data);\r\n    sethintButtondisabled(true);\r\n    new Audio(CorrectSound).play();\r\n    if (count + 1 === gd.length) {\r\n      setTimeout(() => {}, 1000);\r\n      new Audio(GameClearanceSound).play();\r\n      setLevelcompletedModalOpen(true);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const createSubmittedRecordTable = (no, A, B, C, results) => {\r\n    return { no, A, B, C, results };\r\n  };\r\n\r\n  const NextLevelButton = () => {\r\n    if (id === String(levelCreated)) {\r\n      setnewLevelDialogueOpen(true);\r\n      return;\r\n    } else {\r\n      window.location.href = `#/level-select/${parseInt(id) + 1}`;\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={newLevelDialogueOpen}\r\n        //TransitionComponent={Transition}\r\n\r\n        onClose={handleNewLevelDialogueClose}\r\n      >\r\n        <DialogTitle>{\"未完待續...\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            新的關卡正在開發中!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleNewLevelDialogueClose}></Button>\r\n          <Button\r\n            onClick={() => {\r\n              window.location.href = \"/level-select/\";\r\n            }}\r\n          >\r\n            回首頁\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={levelcompletedModalOpen}\r\n        keepMounted\r\n        onClose={() => {\r\n          setLevelcompletedModalOpen(false);\r\n        }}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle align=\"center\">{\"🎉恭喜過關🎉\"}</DialogTitle>\r\n        <DialogContent align=\"center\">\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            總共嘗試了 <b>{submittedRecordTableRows.length + 1}</b>次<br></br>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            <AutorenewIcon />\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              window.location.href = \"/level-select/\";\r\n            }}\r\n          >\r\n            回首頁\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={NextLevelButton}>\r\n            <ArrowForwardIosIcon />\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={duplicateSnackbarOpen}\r\n        onClose={handleduplicateSnackbarClose}\r\n        message=\"這組答案已經輸入過了!\"\r\n        autoHideDuration=\"2000\"\r\n      />\r\n\r\n      <section style={{ height: \"90vh\" }} id=\"step1\">\r\n        <h1 style={{ color: \"rgba(52, 52, 52, 0.5)\", height: \"5px\" }}>\r\n          Level {id}\r\n        </h1>\r\n\r\n        <Grid\r\n          id=\"password\"\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"15vh\" }}\r\n        >\r\n          <Typography\r\n            id=\"cElement\"\r\n            className=\"hexagon\"\r\n            variant=\"h5\"\r\n            color=\"#523D42\"\r\n          >\r\n            C\r\n          </Typography>\r\n          <Typography className=\"hexagon\" variant=\"h5\" color=\"#523D42\">\r\n            =\r\n          </Typography>\r\n          {ansList.map((value) => {\r\n            return (\r\n              <Typography id=\"abElement\" className=\"hexagon\" variant=\"h5\">\r\n                {value}\r\n              </Typography>\r\n            );\r\n          })}\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"20vh\" }}\r\n        >\r\n          <Grid id=\"answerArea\">\r\n            <Grid container item alignItems=\"center\" justifyContent=\"center\">\r\n              <Typography\r\n                bgcolor={textfieldColorA}\r\n                className=\"hexagonIpuntLeft1\"\r\n              >\r\n                A\r\n              </Typography>\r\n              <TextField\r\n                sx={{ bgcolor: textfieldColorA }}\r\n                disabled\r\n                className=\"hexagonIpuntRight1\"\r\n                variant=\"standard\"\r\n                value={inputA}\r\n                InputProps={{ disableUnderline: true }}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"A\");\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ py: 1.5 }}\r\n            >\r\n              <Typography\r\n                bgcolor={textfieldColorB}\r\n                className=\"hexagonIpuntLeft2\"\r\n              >\r\n                B\r\n              </Typography>\r\n              <TextField\r\n                sx={{ bgcolor: textfieldColorB }}\r\n                disabled\r\n                className=\"hexagonIpuntRight2\"\r\n                variant=\"standard\"\r\n                value={inputB}\r\n                InputProps={{ disableUnderline: true }}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"B\");\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ ml: 1.5 }}\r\n            >\r\n              <Typography\r\n                className=\"hexagonIpuntLeft3\"\r\n                bgcolor={textfieldColorC}\r\n              >\r\n                C\r\n              </Typography>\r\n              <TextField\r\n                disabled\r\n                variant=\"standard\"\r\n                className=\"hexagonIpuntRight3\"\r\n                value={inputC}\r\n                InputProps={{ disableUnderline: true }}\r\n                sx={{ bgcolor: textfieldColorC }}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"C\");\r\n                }}\r\n              />\r\n\r\n              <KeyIcon\r\n                id=\"key\"\r\n                alignItems=\"flex-end\"\r\n                sx={{ color: keyIconColor }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"70px\" }}\r\n        >\r\n          <Button\r\n            className=\"submitBtn\"\r\n            sx={{ color: \"#523D42\", ml: 5.5 }}\r\n            onClick={submitButtonOnclick}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <IconButton\r\n            id=\"hintButton\"\r\n            disabled={hintButtondisabled}\r\n            size=\"large\"\r\n          >\r\n            <LightbulbIcon\r\n              sx={{ mb: 1, \"&:hover\": { color: \"yellow\" } }}\r\n              onClick={hintButtonOnclick}\r\n            />\r\n          </IconButton>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"200px\" }}\r\n        >\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(1);\r\n              }}\r\n            >\r\n              1\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(2);\r\n              }}\r\n            >\r\n              2\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(3);\r\n              }}\r\n            >\r\n              3\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(4);\r\n              }}\r\n            >\r\n              4\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(5);\r\n              }}\r\n            >\r\n              5\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(6);\r\n              }}\r\n            >\r\n              6\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(7);\r\n              }}\r\n            >\r\n              7\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(8);\r\n              }}\r\n            >\r\n              8\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(9);\r\n              }}\r\n            >\r\n              9\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={backspaceButtonOnClick}\r\n            >\r\n              <BackspaceIcon />\r\n            </Button>\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={() => {\r\n                numberButtonOnClick(0);\r\n              }}\r\n            >\r\n              0\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"hexagonBtn\"\r\n              sx={{ color: \"#523D42\" }}\r\n              onClick={minusButtonOnclick}\r\n            >\r\n              (-)\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"50px\" }}\r\n          mt={1}\r\n        >\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"submittedRecord\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n          >\r\n            <Button sx={{ color: \"white\" }} className=\"recordBtn\">\r\n              <ArrowDownwardIcon />\r\n              Record\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </section>\r\n      <br />\r\n      <section id=\"submittedRecord\">\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={{ mt: 4.5, mb: 4 }}\r\n        >\r\n          <TableContainer style={{ width: \"350px\" }} component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: \"30px\" }} align=\"center\">\r\n                    No.\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">A</TableCell>\r\n                  <TableCell align=\"center\">B</TableCell>\r\n                  <TableCell align=\"center\">C</TableCell>\r\n                  <TableCell align=\"center\">Results</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {submittedRecordTableRows.map((row) => (\r\n                  <TableRow\r\n                    key={row.no}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.no}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.A}</TableCell>\r\n                    <TableCell align=\"center\">{row.B}</TableCell>\r\n                    <TableCell align=\"center\">{row.C}</TableCell>\r\n                    <TableCell align=\"center\">{row.results}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </section>\r\n      <Steps\r\n        onComplete={() => {\r\n          setStepEnable(false);\r\n        }}\r\n        enabled={stepEnable && id === \"1\"}\r\n        steps={steps}\r\n        initialStep={0}\r\n        onExit={() => {}}\r\n        // onStart={() => {\r\n        //   setStepEnable(false);\r\n        // }}\r\n        options={{\r\n          nextLabel: \"下一步\",\r\n          prevLabel: \"上一步\",\r\n          doneLabel: \"完成\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport questionBase from \"../questionBase\";\r\nimport LocalFloristIcon from \"@mui/icons-material/LocalFlorist\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nfunction LevelSelect() {\r\n  console.log(questionBase);\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <Grid\r\n          style={{ minwidth: \"80%\" }}\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          sx={{ py: 4, px: 2 }}\r\n        >\r\n          {questionBase.data.map((question) => {\r\n            return (\r\n              <grid\r\n                alignItems=\"center\"\r\n                item\r\n                style={{ height: \"50px\", width: \"110px\" }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  sx={{ borderColor: \"#509993\", color: \"#57555E\" }}\r\n                  href={`#/level-select/${question.id}`}\r\n                  variant=\"outlined\"\r\n                  startIcon={<LocalFloristIcon sx={{ color: \"#FF7070\" }} />}\r\n                  key={question.id}\r\n                >\r\n                  {question.difficulty}\r\n                </Button>\r\n              </grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LevelSelect;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ErrorPage() {\r\n  return <div>THIS IS ERROR PAGE</div>;\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ButtonAppBar from \"./AppComponent/ButtonAppBar\";\nimport Appbody from \"./AppComponent/AppBody\";\nimport LevelSelect from \"./AppComponent/LevelSelect\";\nimport ErrorPage from \"./AppComponent/ErrorPage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { KeyboardReturnSharp } from \"@mui/icons-material\";\nimport NewLevelPage from \"./AppComponent/NewLevelPopUp\";\nconst App = () => {\n  console.log(\"app\");\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <ButtonAppBar />\n        <Routes>\n          <Route exact path=\"/\" element={<LevelSelect />}></Route>\n          <Route path=\"/level-select/:id\" element={<Appbody />}></Route>\n          {/* <Route path=\"/NewLevelPage\" element={<NewLevelPage />}></Route>\n          <Route path=\"*\" element={<ErrorPage />}></Route> */}\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode enable={false}>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/correctSound.38029e5a.wav\";","module.exports = __webpack_public_path__ + \"static/media/gameClearanceSound.58db2c55.wav\";","module.exports = __webpack_public_path__ + \"static/media/failureSound.1472b5cf.wav\";"],"sourceRoot":""}