{"version":3,"sources":["Assets/correctSound.wav","Assets/gameClearanceSound.wav","AppComponent/Popup.js","AppComponent/ButtonAppBar.js","Services/Calculator.js","questionBase.js","AppComponent/NewLevelPopUp.js","AppComponent/AppBody.js","AppComponent/LevelSelect.js","AppComponent/ErrorPage.js","App.js","reportWebVitals.js","index.js","Assets/failureSound.wav"],"names":["module","exports","__webpack_require__","p","style","outline","position","top","left","transform","width","bgcolor","border","boxShadow","PopUp","_ref","showPopup","_React$useState","React","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","react","IconButton","sx","color","onClick","Help_default","a","Modal","onClose","aria-labelledby","aria-describedby","Grid","container","alignItems","justifyContent","Typography","align","id","variant","component","mt","mb","Button","ButtonAppBar","Box","flexGrow","AppBar","Toolbar","size","edge","aria-label","Menu_default","Calculator","calculatorMethod","gd","inputA","inputB","constant","indexA","indexOf","indexB","b","slice","join","length","parseInt","questionBase","data","difficulty","question","NextLevelPopUp","react_router_dom","to","summittedRecordShow","Set","summittedRecord","Appbody","useParams","levelCreated","level","find","_useState","useState","Array","fill","_useState2","ansList","setAnsList","_useState3","_useState4","count","setCount","_useState5","_useState6","inputIndex","setInputIndex","_useState7","_useState8","setInputA","_useState9","_useState10","setInputB","_useState11","_useState12","inputC","setInputC","_useState13","_useState14","textfieldColorA","setTextfieldColorA","_useState15","_useState16","textfieldColorB","setTextfieldColorB","_useState17","_useState18","textfieldColorC","setTextfieldColorC","_useState19","_useState20","keyIconColor","setKeyIconColor","_useState21","_useState22","sumittedRecordTableRows","setSumittedRecordTableRows","_useState23","_useState24","newLevelDialogueOpen","setnewLevelDialogueOpen","handleNewLevelDialogueClose","_useState25","_useState26","duplicateSnackbarOpen","setduplicateSnackbarOpen","_useState27","_useState28","hidden","setHidden","navigate","useNavigate","Transition","useCallback","concat","replace","forwardRef","props","ref","react_default","createElement","Slide","assign","direction","textfieldOnClick","inputInd","numberButtonOnClick","inputNumber","newValue","String","createSubmittedRecordTable","no","A","B","C","results","SpeedDial","FabProps","backgroundColor","type","window","location","href","reload","ariaLabel","bottom","right","icon","ArrowForward_default","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","height","map","value","borderColor","item","TextField","disabled","py","ml","Key_default","toConsumableArray","currentSummittedAnswer","has","add","Audio","CorrectSound","play","console","log","setTimeout","GameClearanceSound","correctAnswer","FailureSound","_step","_iterator","_createForOfIteratorHelper","s","n","done","split","err","e","f","Check_default","Backspace_default","modules","activeClass","spy","smooth","offset","duration","ArrowDownward_default","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","key","&:last-child td, &:last-child th","scope","LevelSelect","Box_Box","minwidth","px","startIcon","LocalFlorist_default","ErrorPage","App","className","AppComponent_ButtonAppBar","react_router","exact","path","element","AppComponent_LevelSelect","AppBody","AppComponent_ErrorPage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.1304dc2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correctSound.38029e5a.wav\";","module.exports = __webpack_public_path__ + \"static/media/gameClearanceSound.58db2c55.wav\";","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\n\r\nconst style = {\r\n  outline: 0,\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function PopUp({ showPopup }) {\r\n  const [open, setOpen] = React.useState(showPopup);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton sx={{ color: \"White\" }} onClick={handleOpen}>\r\n        <HelpIcon />\r\n      </IconButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" sx={style}>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            遊戲說明\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2, mb: 2 }}\r\n          >\r\n            輸入正確ABC組合解開密碼\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            遊戲目標\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            每輸入正確一次 ，可以解開一格密碼， 將所有密碼解開獲勝\r\n          </Typography>\r\n          <Button sx={{ mt: 2 }} align=\"center\" onClick={handleClose}>\r\n            close\r\n          </Button>\r\n        </Grid>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Popup from \"./Popup\";\r\n\r\nconst ButtonAppBar = () => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"sticky\" sx={{ bgcolor: \"#509993\" }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Guess My Rule\r\n          </Typography>\r\n\r\n          <Popup />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default ButtonAppBar;\r\n","const Calculator = {\r\n  calculatorMethod: function(gd, inputA, inputB) {\r\n    const indexA = gd.indexOf(\"A\");\r\n    const indexB = gd.indexOf(\"B\");\r\n    let a;\r\n    let b = gd.slice(indexA + 1, indexB).join(\"\");\r\n    let constant;\r\n    if (indexA === 0) {\r\n      a = \"1\";\r\n    } else {\r\n      a = gd.slice(0, indexA).join(\"\");\r\n    }\r\n    if ((b === \"+\") | (b === \"-\")) {\r\n      b = b + \"1\";\r\n    }\r\n\r\n    if (indexB + 1 === gd.length) {\r\n      constant = \"0\";\r\n    } else {\r\n      constant = gd.slice(indexB + 1, gd.length).join(\"\");\r\n    }\r\n\r\n    const answer =\r\n      parseInt(a) * parseInt(inputA) +\r\n      parseInt(b) * parseInt(inputB) +\r\n      parseInt(constant);\r\n\r\n    return answer;\r\n  },\r\n};\r\nexport default Calculator;\r\n","export const data = [\r\n  { id: \"1\", difficulty: \"level 1\", question: [2, \"A\", \"+\", \"B\"] },\r\n  { id: \"2\", difficulty: \"level 2\", question: [\"A\", \"-\", 4, \"B\"] },\r\n  { id: \"3\", difficulty: \"level 3\", question: [3, \"A\", \"-\", 2, \"B\"] },\r\n  { id: \"4\", difficulty: \"level 4\", question: [\"A\", \"+\", 3, \"B\", \"-\", 1] },\r\n  { id: \"5\", difficulty: \"level 5\", question: [3, \"A\", \"+\", 2, \"B\", \"-\", 7] },\r\n];\r\n\r\nexport default { data };\r\n","import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  outline: 0,\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NextLevelPopUp({ component }) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" sx={style}>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n          >\r\n            未完待續...\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            id=\"modal-modal-description\"\r\n            sx={{ mt: 2, mb: 2 }}\r\n          >\r\n            新的關卡正在開發中!\r\n          </Typography>\r\n          <Button sx={{ mt: 2 }} align=\"center\" onClick={handleClose}>\r\n            關閉\r\n          </Button>\r\n          <Button sx={{ mt: 2 }} align=\"center\">\r\n            <Link to={`/level-select/`}></Link>\r\n          </Button>\r\n        </Grid>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogContent,\r\n  DialogActions,\r\n  Slide,\r\n  Dialog,\r\n  SpeedDial,\r\n  Modal,\r\n  Snackbar,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport BackspaceIcon from \"@mui/icons-material/Backspace\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport KeyIcon from \"@mui/icons-material/Key\";\r\nimport Calculator from \"../Services/Calculator\";\r\nimport CorrectSound from \"../Assets/correctSound.wav\";\r\nimport FailureSound from \"../Assets/failureSound.wav\";\r\nimport GameClearanceSound from \"../Assets/gameClearanceSound.wav\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductionQuantityLimits } from \"@mui/icons-material\";\r\nimport questionBase from \"../questionBase\";\r\nimport NewLevelPopUp from \"./NewLevelPopUp\";\r\nimport { SpeedDialIcon } from \"@mui/material\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Popup from \"./Popup\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\n\r\nconst summittedRecordShow = new Set();\r\nconst summittedRecord = new Set();\r\nconst Appbody = () => {\r\n  const { id } = useParams();\r\n  const levelCreated = questionBase.data.length;\r\n  const level = questionBase.data.find((level) => level.id === id);\r\n  const { difficulty, question } = level;\r\n\r\n  const gd = question;\r\n\r\n  const [ansList, setAnsList] = useState(Array(gd.length).fill(\" \"));\r\n  const [count, setCount] = useState(0);\r\n  const [inputIndex, setInputIndex] = useState(\"\");\r\n  const [inputA, setInputA] = useState(\"\");\r\n  const [inputB, setInputB] = useState(\"\");\r\n  const [inputC, setInputC] = useState(\"\");\r\n  const [textfieldColorA, setTextfieldColorA] = useState(\"white\");\r\n  const [textfieldColorB, setTextfieldColorB] = useState(\"white\");\r\n  const [textfieldColorC, setTextfieldColorC] = useState(\"white\");\r\n  const [keyIconColor, setKeyIconColor] = useState(\"Gray\");\r\n  const [sumittedRecordTableRows, setSumittedRecordTableRows] = useState([]);\r\n  const [newLevelDialogueOpen, setnewLevelDialogueOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setnewLevelDialogueOpen(true);\r\n  };\r\n\r\n  const handleNewLevelDialogueClose = () => {\r\n    setnewLevelDialogueOpen(false);\r\n  };\r\n  const [duplicateSnackbarOpen, setduplicateSnackbarOpen] = useState(false);\r\n  const handleDuplicateSnackbarOpen = () => {\r\n    setduplicateSnackbarOpen(true);\r\n  };\r\n\r\n  const handleduplicateSnackbarClose = () => {\r\n    setduplicateSnackbarOpen(false);\r\n  };\r\n  const [hidden, setHidden] = useState(true);\r\n  const navigate = useNavigate();\r\n  const NextLevelButtonOnClick = useCallback(\r\n    () => navigate(`/level-select/${parseInt(id) + 1}`, { replace: true }),\r\n    [navigate]\r\n  );\r\n  const Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & {\r\n      children: React.ReactElement<any, any>,\r\n    },\r\n    ref: React.Ref<unknown>\r\n  ) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  const textfieldOnClick = (inputInd) => {\r\n    if (inputInd === inputIndex) {\r\n      setInputIndex(\"\");\r\n    }\r\n    setInputIndex(inputInd);\r\n    switch (inputInd) {\r\n      case \"A\":\r\n        setTextfieldColorA(\"#BEBEBE\");\r\n        setTextfieldColorB(\"white\");\r\n        setTextfieldColorC(\"white\");\r\n        break;\r\n      case \"B\":\r\n        setTextfieldColorA(\"white\");\r\n        setTextfieldColorB(\"#BEBEBE\");\r\n        setTextfieldColorC(\"white\");\r\n        break;\r\n      case \"C\":\r\n        setTextfieldColorA(\"white\");\r\n        setTextfieldColorB(\"white\");\r\n        setTextfieldColorC(\"#BEBEBE\");\r\n        break;\r\n    }\r\n  };\r\n  const numberButtonOnClick = (inputNumber) => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputA(newValue);\r\n      } else {\r\n        const newValue = String(inputA) + String(inputNumber);\r\n        setInputA(parseInt(newValue, 10));\r\n      }\r\n    }\r\n    if (inputIndex === \"B\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputB(parseInt(newValue, 10));\r\n      } else {\r\n        const newValue = String(inputB) + String(inputNumber);\r\n        setInputB(parseInt(newValue, 10));\r\n      }\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      if (inputA === \"\") {\r\n        const newValue = inputNumber;\r\n        setInputC(parseInt(newValue, 10));\r\n      } else {\r\n        const newValue = String(inputC) + String(inputNumber);\r\n        setInputC(parseInt(newValue, 10));\r\n      }\r\n    }\r\n  };\r\n  const backspaceButtonOnClick = () => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      setInputA(parseInt(inputA / 10) ? parseInt(inputA / 10) : \"\");\r\n    }\r\n    if (inputIndex === \"B\") {\r\n      setInputB(parseInt(inputB / 10) ? parseInt(inputB / 10) : \"\");\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      setInputC(parseInt(inputC / 10) ? parseInt(inputC / 10) : \"\");\r\n    }\r\n  };\r\n  const minusButtonOnclick = () => {\r\n    if (!inputIndex) {\r\n      return;\r\n    }\r\n    if (inputIndex === \"A\") {\r\n      if (inputA === \"\") {\r\n        setInputA(\"-\");\r\n      }\r\n    }\r\n\r\n    if (inputIndex === \"B\") {\r\n      if (inputB === \"\") {\r\n        setInputB(\"-\");\r\n      }\r\n    }\r\n    if (inputIndex === \"C\") {\r\n      if (inputC === \"\") {\r\n        setInputC(\"-\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitButtonOnclick = () => {\r\n    if (inputA.length === 0 || inputB.length === 0 || inputC.length === 0) {\r\n      return;\r\n    }\r\n    let data = [...ansList];\r\n    let currentSummittedAnswer =\r\n      String(inputA) + \",\" + String(inputB) + \",\" + String(inputC);\r\n\r\n    if (summittedRecord.has(currentSummittedAnswer)) {\r\n      setduplicateSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (Calculator.calculatorMethod(gd, inputA, inputB) === parseInt(inputC)) {\r\n      summittedRecord.add(currentSummittedAnswer);\r\n      summittedRecordShow.add(currentSummittedAnswer + \",正確\");\r\n      data[count] = gd[count];\r\n      setCount(count + 1);\r\n      setAnsList(data);\r\n      setKeyIconColor(\"Gold\");\r\n      new Audio(CorrectSound).play();\r\n      console.log(count);\r\n      console.log(gd.length);\r\n\r\n      if (count + 1 === gd.length) {\r\n        setTimeout(() => {}, 1000);\r\n        new Audio(GameClearanceSound).play();\r\n        setHidden(false);\r\n        return;\r\n      }\r\n    } else {\r\n      let correctAnswer = Calculator.calculatorMethod(gd, inputA, inputB);\r\n      summittedRecord.add(inputA + \",\" + inputB + \",\" + correctAnswer);\r\n      summittedRecord.add(currentSummittedAnswer);\r\n      console.log(summittedRecord);\r\n      summittedRecordShow.add(\r\n        currentSummittedAnswer + \",錯誤 \" + \" C = \" + correctAnswer\r\n      );\r\n      setKeyIconColor(\"Gray\");\r\n      new Audio(FailureSound).play();\r\n    }\r\n    //console.log(summittedRecordShow);\r\n    setInputA(\"\");\r\n    setInputB(\"\");\r\n    setInputC(\"\");\r\n    let no = 1;\r\n    for (let item of summittedRecordShow) {\r\n      item = item.split(\",\");\r\n      setSumittedRecordTableRows(\r\n        sumittedRecordTableRows.concat([\r\n          createSubmittedRecordTable(no, item[0], item[1], item[2], item[3]),\r\n        ])\r\n      );\r\n      no += 1;\r\n    }\r\n  };\r\n\r\n  const createSubmittedRecordTable = (no, A, B, C, results) => {\r\n    return { no, A, B, C, results };\r\n  };\r\n\r\n  const NextLevelButton = () => {\r\n    if (id === String(levelCreated)) {\r\n      setnewLevelDialogueOpen(true);\r\n      return;\r\n    } else {\r\n      window.location.href = `#/level-select/${parseInt(id) + 1}`;\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SpeedDial\r\n        FabProps={{ size: \"medium\", style: { backgroundColor: \"#509993\" } }}\r\n        type=\"reset\"\r\n        hidden={hidden}\r\n        onClick={NextLevelButton}\r\n        ariaLabel=\"SpeedDial openIcon example\"\r\n        sx={{ position: \"absolute\", bottom: 16, right: 16 }}\r\n        icon={<ArrowForwardIcon />}\r\n      ></SpeedDial>\r\n      <Dialog\r\n        open={newLevelDialogueOpen}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleNewLevelDialogueClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{\"未完待續...\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            新的關卡正在開發中!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleNewLevelDialogueClose}>確定</Button>\r\n          <Button\r\n            onClick={() => {\r\n              window.location.href = \"/level-select/\";\r\n            }}\r\n          >\r\n            回首頁\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={duplicateSnackbarOpen}\r\n        onClose={handleduplicateSnackbarClose}\r\n        message=\"這組答案已經輸入過了!\"\r\n        autoHideDuration=\"2000\"\r\n      />\r\n      <section style={{ height: \"90vh\", backgroundColor: \"#FAF9F9\" }}>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"15vh\" }}\r\n        >\r\n          <Typography style={{ width: \"50px\" }} variant=\"h5\" color=\"#523D42\">\r\n            C =\r\n          </Typography>\r\n          {ansList.map((value) => {\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  border: 1,\r\n                  borderColor: \"grey.500\",\r\n                  width: \"30px\",\r\n                  height: \"40px\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h5\">{value}</Typography>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"20vh\" }}\r\n        >\r\n          <Grid>\r\n            <Grid container item alignItems=\"center\" justifyContent=\"center\">\r\n              <Typography style={{ width: \"40px\" }} color=\"#523D42\">\r\n                A\r\n              </Typography>\r\n              <TextField\r\n                disabled\r\n                style={{\r\n                  width: \"100px\",\r\n                  backgroundColor: textfieldColorA,\r\n                }}\r\n                variant=\"standard\"\r\n                value={inputA}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"A\");\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ py: 1.5 }}\r\n            >\r\n              <Typography style={{ width: \"40px\" }} color=\"#523D42\">\r\n                B\r\n              </Typography>\r\n              <TextField\r\n                disabled\r\n                style={{ width: \"100px\", backgroundColor: textfieldColorB }}\r\n                variant=\"standard\"\r\n                value={inputB}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"B\");\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ ml: 1.5 }}\r\n            >\r\n              <Typography style={{ width: \"40px\" }} color=\"#523D42\">\r\n                C\r\n              </Typography>\r\n              <TextField\r\n                disabled\r\n                style={{ width: \"100px\", backgroundColor: textfieldColorC }}\r\n                variant=\"standard\"\r\n                value={inputC}\r\n                onClick={() => {\r\n                  textfieldOnClick(\"C\");\r\n                }}\r\n              />\r\n\r\n              <KeyIcon alignItems=\"flex-end\" sx={{ color: keyIconColor }} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"80px\" }}\r\n        >\r\n          <Button\r\n            sx={{ borderColor: \"#BBCCB4\", color: \"#FAF9F9\" }}\r\n            style={{ backgroundColor: \"#BBCCB4\" }}\r\n            variant=\"outlined\"\r\n            onClick={submitButtonOnclick}\r\n          >\r\n            <CheckIcon />\r\n            Summit\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"150px\" }}\r\n        >\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(1);\r\n              }}\r\n            >\r\n              1\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(2);\r\n              }}\r\n            >\r\n              2\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(3);\r\n              }}\r\n            >\r\n              3\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(4);\r\n              }}\r\n            >\r\n              4\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(5);\r\n              }}\r\n            >\r\n              5\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(6);\r\n              }}\r\n            >\r\n              6\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(7);\r\n              }}\r\n            >\r\n              7\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(8);\r\n              }}\r\n            >\r\n              8\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(9);\r\n              }}\r\n            >\r\n              9\r\n            </Button>\r\n          </Grid>\r\n          <Grid item justifyContent=\"center\">\r\n            <Button variant=\"outlined\" onClick={backspaceButtonOnClick}>\r\n              <BackspaceIcon />\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                numberButtonOnClick(0);\r\n              }}\r\n            >\r\n              0\r\n            </Button>\r\n\r\n            <Button variant=\"outlined\" onClick={minusButtonOnclick}>\r\n              (-)\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ height: \"10vh\" }}\r\n          mt={2}\r\n        >\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"summittedRecord\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={-70}\r\n            duration={500}\r\n          >\r\n            <Button\r\n              sx={{ borderColor: \"#BBCCB4\", color: \"#FAF9F9\" }}\r\n              style={{ backgroundColor: \"#BBCCB4\" }}\r\n              variant=\"outlined\"\r\n            >\r\n              <ArrowDownwardIcon />\r\n              Sumitted Record\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </section>\r\n      <section id=\"summittedRecord\">\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n          <TableContainer style={{ width: \"350px\" }} component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: \"30px\" }} align=\"center\">\r\n                    No.\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">A</TableCell>\r\n                  <TableCell align=\"center\">B</TableCell>\r\n                  <TableCell align=\"center\">C</TableCell>\r\n                  <TableCell align=\"center\">Results</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {sumittedRecordTableRows.map((row) => (\r\n                  <TableRow\r\n                    key={row.no}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.no}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.A}</TableCell>\r\n                    <TableCell align=\"center\">{row.B}</TableCell>\r\n                    <TableCell align=\"center\">{row.C}</TableCell>\r\n                    <TableCell align=\"center\">{row.results}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </section>\r\n      <Popup showPopup={id === \"1\"}></Popup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport questionBase from \"../questionBase\";\r\nimport LocalFloristIcon from \"@mui/icons-material/LocalFlorist\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nfunction LevelSelect() {\r\n  console.log(questionBase);\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <Grid\r\n          style={{ minwidth: \"80%\" }}\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          sx={{ py: 4, px: 2 }}\r\n        >\r\n          {questionBase.data.map((question) => {\r\n            return (\r\n              <grid\r\n                alignItems=\"center\"\r\n                item\r\n                style={{ height: \"50px\", width: \"110px\" }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  sx={{ borderColor: \"#509993\", color: \"#57555E\" }}\r\n                  href={`#/level-select/${question.id}`}\r\n                  variant=\"outlined\"\r\n                  startIcon={<LocalFloristIcon sx={{ color: \"#FF7070\" }} />}\r\n                  key={question.id}\r\n                >\r\n                  {question.difficulty}\r\n                </Button>\r\n              </grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LevelSelect;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ErrorPage() {\r\n  return <div>THIS IS ERROR PAGE</div>;\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ButtonAppBar from \"./AppComponent/ButtonAppBar\";\nimport Appbody from \"./AppComponent/AppBody\";\nimport LevelSelect from \"./AppComponent/LevelSelect\";\nimport ErrorPage from \"./AppComponent/ErrorPage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { KeyboardReturnSharp } from \"@mui/icons-material\";\nimport NewLevelPage from \"./AppComponent/NewLevelPopUp\";\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <ButtonAppBar />\n        <Routes>\n          <Route exact path=\"/\" element={<LevelSelect />}></Route>\n          <Route path=\"/level-select/:id\" element={<Appbody />}></Route>\n          <Route path=\"/NewLevelPage\" element={<NewLevelPage />}></Route>\n          <Route path=\"*\" element={<ErrorPage />}></Route>\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/failureSound.1472b5cf.wav\";"],"sourceRoot":""}